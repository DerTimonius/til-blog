---
import type { CollectionEntry } from 'astro:content';
import Layout from './Layout.astro';
import Header from '~/components/Header.astro';
import Date from '~/components/Date.astro';
import Footer from '~/components/Footer.astro';
import { site } from '~/utils/config';
import Tag from '~/components/Tag.astro';
import ReadingTime from '~/components/ReadingTime.astro';
import { formatDate } from '~/utils/formatDate';
import { getRelatedPosts } from '~/utils/sortPosts';
import TOC from '~/components/TOC.astro';
import BackToTopButton from '~/components/BackToTopButton.astro';
import Link from '~/components/Link.astro';
import CommentSection from '~/components/CommentSection.astro';

export interface Props {
  post: CollectionEntry<'blogs'>;
}

const { post } = Astro.props;

const {
  title,
  description,
  pubDate,
  tags,
  updatedAt,
  relatedPosts,
  bskyPostId,
} = post.data;

const tagsDisplay = tags.map((tag) => {
  return { name: tag, postsCount: 0 };
});
const date = formatDate(pubDate);
const updatedDate = formatDate(updatedAt!);

const relatedArticles = relatedPosts ? await getRelatedPosts(relatedPosts) : [];
const { Content, remarkPluginFrontmatter, headings } = await post.render();
const time = remarkPluginFrontmatter.minutesRead;
---

<Layout
  title={title}
  ogImage={`/posts/${post.slug}/og.png`}
  author={site.author}
  description={description}
>
  <Header />
  <BackToTopButton />
  <main
    id="main-content"
    class="mx-auto w-full max-w-6xl px-4 pb-12"
    transition:name={post.slug}
  >
    <h1
      data-test-id="blog-title"
      transition:name={title}
      class="mb-8 mt-12 text-center text-4xl font-bold text-custom-accent"
    >
      {title}
    </h1>
    <div
      class="grid-rows-[auto_1fr] divide-y divide-gray-200 pb-8 lg:grid lg:grid-cols-4 lg:gap-x-6 lg:divide-y-0"
    >
      <aside
        aria-label="sidebar top"
        class="flex flex-col gap-4 pb-10 pt-6 lg:border-b lg:border-gray-200 lg:pt-11"
      >
        <div class="mx-auto flex w-full max-w-4xl justify-start">
          <button
            class="focus-outline flex hover:opacity-75"
            onclick="history.back()"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-6 w-6 fill-custom-base"
              ><path
                d="M13.293 6.293 7.586 12l5.707 5.707 1.414-1.414L10.414 12l4.293-4.293z"
              ></path>
            </svg><span>Go back</span>
          </button>
        </div>
        <Date datetime={date} size="lg" className="my-2" />
        <ReadingTime {time} size="lg" />
        <div class="lg:border-b lg:border-gray-200"></div>
        {headings.length ? <TOC {headings} /> : null}
      </aside>
      <div
        class="divide-y divide-gray-200 pb-6 dark:divide-gray-700 lg:col-span-3 lg:row-span-2 lg:pb-0"
      >
        <article
          role="article"
          class="prose mx-auto ml-2 mt-8 max-w-4xl scroll-smooth"
        >
          <Content />
          {
            updatedAt ? (
              <p class="text-sm font-light italic">
                Last update at: {updatedDate}
              </p>
            ) : null
          }
          {bskyPostId ? <CommentSection postId={bskyPostId} /> : null}
        </article>
      </div>
      <aside
        aria-label="sidebar-bottom"
        class="!w-full divide-gray-200 text-sm font-medium dark:divide-gray-700 lg:divide-y"
      >
        <div>
          <h3 class="mt-4 text-lg font-semibold">Tags</h3>
          <ul class="my-8">
            {tagsDisplay.map((tag) => <Tag {tag} />)}
          </ul>
        </div>
        {
          relatedArticles.length ? (
            <div>
              <h3 class="mt-4 text-lg font-semibold">Related Articles</h3>
              <ul>
                {relatedArticles.map((post) => (
                  <li>
                    <Link
                      href={`/blog/${post.slug}`}
                      className="text-custom-accent hover:text-custom-base"
                    >
                      {post.data.title}
                    </Link>
                  </li>
                ))}
              </ul>
            </div>
          ) : null
        }
      </aside>
    </div>
  </main>
  <Footer className="max-w-6xl" />
</Layout>
