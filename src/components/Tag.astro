---
import classNames from 'classnames';
import type { Tag } from '~/utils/getTags';

export interface Props {
  tag: Tag;
  size?: 'sm' | 'lg';
  invertColors?: boolean;
  showCount?: boolean;
}

const { tag, size = 'sm', invertColors = false, showCount } = Astro.props;
const linkClasses = classNames(
  ' pr-2 group relative underline decoration-dashed hover:-top-0.5  focus-visible:p-1',
  {
    'text-sm': size === 'sm',
    'text-lg': size === 'lg',
    'text-custom-accent hover:text-custom-base': invertColors,
    'hover:text-custom-accent': !invertColors,
  },
);
---

<li
  class={`inline-block ${
    size === 'sm' ? 'my-1 underline-offset-4' : 'my-3 mx-1 underline-offset-8'
  }`}
>
  <a
    href={`/tags/${tag.name.toLowerCase()}`}
    transition:name={tag.name.toLowerCase()}
    class={linkClasses}
    data-test-id="tag"
  >
    <!-- <svg xmlns="http://www.w3.org/2000/svg" class={svgClasses}
      ><path
        d="M16.018 3.815 15.232 8h-4.966l.716-3.815-1.964-.37L8.232 8H4v2h3.857l-.751 4H3v2h3.731l-.714 3.805 1.965.369L8.766 16h4.966l-.714 3.805 1.965.369.783-4.174H20v-2h-3.859l.751-4H21V8h-3.733l.716-3.815-1.965-.37zM14.106 14H9.141l.751-4h4.966l-.752 4z"
      ></path>
    </svg> -->
    <span
      >{tag.name.toLowerCase()}{showCount ? `(${tag.postsCount})` : null}</span
    >
  </a>
</li>
